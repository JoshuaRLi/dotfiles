#!/usr/bin/env bash

notify () {
    msg="[wal-set] ${1}"
    mode="${2:-normal}"
    if pgrep dunst > /dev/null; then
        notify-send "$msg" -u "$mode"
    else
        printf '%s\n' "$msg"
    fi
}

notify-err () {
    notify "ERROR: ${1}" 'critical'
}

notify 'init'

if [[ -f "${HOME}/.cache/wal/wal" ]] && [[ -z "$1" ]]; then
    # If wal-set is invoked standalone and a cached wallpaper from a previous invocation is present, use that.
    walcache="$(< "${HOME}/.cache/wal/wal")"
    notify 'Using cached wallpaper.'
    wal -i "$walcache" -a 75
else
    sdim="$(xdpyinfo | grep dimensions | tr -s ' ' | cut -d' ' -f3)"
    notify "Detected screen dimensions: ${sdim}"
    walldir="${HOME}/Wallpapers/Originals-${sdim}"
    if [[ ! -d "$walldir" ]]; then
        notify-err "Directory ${walldir} not found."
        exit 1
    fi
    notify "Retrieving category dirs in ${walldir}"
    categories=($(ls -1 "$walldir" | tr '\n' ' '))
    if [[ ${#categories[@]} -eq 0 ]]; then
        notify-err "Wallpaper dir ${walldir} contains no category dirs."
        exit 1
    fi
    notify "Categories: ${categories[*]}"
    if [[ -z "$1" ]]; then
        # A category is chosen at random if wal-set is invoked standalone and there is no cached wallpaper.
        notify 'No category specified; choosing one randomly.'
        category="${walldir}/${categories[$RANDOM % ${#categories[@]}]}"
    else
        category="${walldir}/${1}"
    fi
    if [[ -d "$category" ]]; then
        notify "Using category dir ${category}"
        wal -i "$category" -a 75
    else
        notify-err "Category dir ${category} does not exist."
        exit 1
    fi
fi

# NOTE: wal automatically reloads polybar. Only dunst needs to be reloaded.
pkill dunst

# Reload bspwm and dunst colors.
xrdb -merge "${HOME}/.Xresources"
source "${HOME}/.cache/wal/colors.sh"

bspc config normal_border_color "$color0"
bspc config focused_border_color "$color15"
dunst \
    -lb "$color0"  \
    -nb "$color0"  \
    -cb "#ff0000"  \
    -lf "$color15" \
    -bf "$color15" \
    -cf "#000000"  \
    -nf "$color15" &
