#!/usr/bin/env bash

notify () {
    msg="[wal-set] ${1}"
    mode="${2:-normal}"
    if pgrep dunst > /dev/null; then
        notify-send "$msg" -u "$mode"
    else
        printf %s\\n "$msg"
    fi
}

die () {
    notify "fatal error: ${1}" 'critical'
    exit 1
}

if [[ -z "$1" ]] && [[ -f "${HOME}/.cache/wal/wal" ]]; then
    # if wal-set is invoked standalone AND a cached wallpaper from a previous invocation is present, use it.
    walcache="$(< "${HOME}/.cache/wal/wal")"
    notify 'using cached wallpaper.'
    wal -q -i "$walcache" -a 75
else
    command -v xdpyinfo >/dev/null 2>&1 || die 'xdpyinfo not installed'
    sdim="$(xdpyinfo | grep dimensions | tr -s ' ' | cut -d' ' -f3)"
    notify "detected screen dimensions: ${sdim}"
    walldir="${HOME}/Wallpapers-${sdim}"
    [[ ! -d "$walldir" ]] && die "directory ${walldir} not found."
    notify "retrieving category dirs in ${walldir}"
    categories=($(ls -1 "$walldir" | tr '\n' ' '))
    [[ ${#categories[@]} -eq 0 ]] && die "${walldir} contains no category directories."
    if [[ -z "$1" ]]; then
        # a category is chosen at random if wal-set is invoked standalone AND there is no cached wallpaper.
        notify 'no category specified; choosing one randomly.'
        category="${walldir}/${categories[$RANDOM % ${#categories[@]}]}"
    else
        category="${walldir}/${1}"
    fi
    [[ ! -d "$category" ]] && die "category dir ${category} does not exist."
    notify "using category dir ${category}"
    wal -q -i "$category" -a 75
fi

notify 'loading new colors into X.'
xrdb -merge "${XDG_CONFIG_HOME}/Xresources.d/all"

notify 'reloading bspwn, dunst, and polybar.'
# NOTE: wal automatically reloads polybar, so we don't need to do it here.
source "${HOME}/.cache/wal/colors.sh"
bspc config normal_border_color "$color0"
bspc config focused_border_color "$color15"
pkill -x dunst && dunst \
    -lb "$color0"  \
    -nb "$color0"  \
    -cb "#ff0000"  \
    -lf "$color15" \
    -bf "$color15" \
    -cf "#000000"  \
    -nf "$color15" &
