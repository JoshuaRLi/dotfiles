#!/usr/bin/env zsh

fifo='/tmp/bar'
[ -p "$fifo" ] && rm "$fifo"
mkfifo "$fifo"

timeout_wifi='5s'
timeout_mem='3s'
timeout_cpu='3s'
timeout_clock='15s'
timeout_bat='1m'

wifi () {
    # TODO: handle not connected
    iw dev wlp2s0 link | awk '/SSID/{print $2}' | builtin read ssid
    builtin printf %s\\n "1ap ${ssid}"
}

mem () {
    awk 'FNR == 1 {t = $2} FNR == 3 {printf "%2.0f\n", (t-$2)*100/t}' \
	/proc/meminfo | builtin read mem_used
    builtin printf %s\\n "2mem ${mem_used}"
}

cpu () {
    # largely from https://stackoverflow.com/a/26791392/5348393
    awk -v a="$(awk '/cpu /{print $2+$4,$2+$4+$5}' /proc/stat; sleep 1)" \
	'/cpu /{split(a,b," "); printf "%2.0f\n", 100*($2+$4-b[1])/($2+$4+$5-b[2])}' \
	/proc/stat | builtin read cpu_used
    builtin printf %s\\n "3cpu ${cpu_used}"
}

bat () {
    builtin read bat_cur < /sys/class/power_supply/BAT0/capacity
    builtin printf %s\\n "4bat ${bat_cur}"
}

clock () {
    date '+%m/%d %I:%M' | builtin read time_str
    builtin printf %s\\n "5${time_str}"
}

while :; do wifi;       sleep $timeout_wifi;        done > "$fifo" &
while :; do mem;        sleep $timeout_mem;         done > "$fifo" &
while :; do cpu;        sleep $timeout_cpu;         done > "$fifo" &
while :; do clock;      sleep $timeout_clock;       done > "$fifo" &
while :; do bat;        sleep $timeout_bat;         done > "$fifo" &

while read -r line; do
    case $line in
        1*) wifi=" ${line:1} "    ;;
        2*) mem=" ${line:1} "     ;;
        3*) cpu=" ${line:1} "     ;;
        4*) bat=" ${line:1} "     ;;
        5*) clock=" ${line:1}"    ;;
    esac
    builtin printf %s\\n "${wifi}${mem}${cpu}${bat}${clock}"
done < "$fifo"
