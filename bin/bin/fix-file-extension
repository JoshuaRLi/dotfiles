#!/usr/bin/env python

# hardcoded mimetype -> extensions that fit my personal use case
# reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types
extensions = {
    'image/jpeg': 'jpg',
    'image/png': 'png',
    'image/gif': 'gif',
    'image/webp': 'webp',
    'video/webm': 'webm',
    'text/html': 'html',
    'application/pdf': 'pdf',
    'application/x-7z-compressed': '7z',
    'application/zip': 'zip',
    'audio/flac': 'flac',
    'audio/x-m4a': 'm4a',
    'audio/mpeg': 'mp3',
    'audio/ogg': 'ogg',
    'video/mp4': 'mp4',
    'video/webm': 'webm',
    'video/x-matroska': 'mkv',
}


if __name__ == "__main__":
    import os, sys, magic

    usage = """this tool renames files with the correct extension based on the guessed mimetype.

usage: {} [-h | --help] path

    path - path to file or directory (will recurse) to operate on
""".format(sys.argv[0])

    try:
        path = sys.argv[1]
    except IndexError:
        sys.exit(usage)
    if path in ('-h', '--help'):
        sys.exit(usage)
    if not os.path.exists(path):
        sys.exit(path + " does not exist")

    paths = []
    if os.path.isdir(path):
        # ignore hidden dirs + files: https://stackoverflow.com/a/13454267/5348393
        for root, dirs, files in os.walk(path, topdown=True):
            dirs[:] = [d for d in dirs if not d[0] == '.']
            for f in files:
                if not f.startswith('.'):
                    paths.append(os.path.join(root, f))
    else:
        paths.append(path)

    for orig in paths:
        ext = extensions.get(magic.from_file(orig, mime=True), None)
        if ext is not None:
            new = "{}.{}".format(os.path.splitext(orig)[0], ext)
            if orig != new:
                os.rename(orig, new)
                print(orig, '->', new)
